---
title: "PPA Buckets"
description: "Categories for public and professional activities"
author: "Sharon Howard"
date: "2024-02-25"
date-modified: today
categories: 
  - ppa
execute: 
  warning: false
  message: false
  echo: false 
---

```{r finishing-up}
# finishing up: checked RData  ppa-2024-02-25
# changed to use buckets file rather than code in a query 
```

## Wikibase queries

The buckets are not part of the wikibase, but as the number is quite small they can be hand-coded into a query. The query below is a starting point for this.

* [PPA buckets](https://beyond-notability.wikibase.cloud/wiki/Project:SPARQL/examples#PPA_Buckets_for_Women)

```{r}
# this needs a Table 
```


```{r libraries-etc}
# shared libraries, functions etc ####

source(here::here("_R/shared.R"))

# any extra libraries will usually go here 


# standard query strings and queries ####

source(here::here("_R/std_queries.R"))

```





```{r}
bn_ppa_buckets_sparql <-
  'SELECT distinct ?person ?personLabel ?ppaLabel ?ppa  ?ppa_value ?ppa_valueLabel ?s
WHERE {  
  ?person bnwdt:P3 bnwd:Q3 .
  ?person ?p ?s .  
 
      ?ppa wikibase:claim ?p;      
         wikibase:statementProperty ?ps.      
  
      ?ppa bnwdt:P12 bnwd:Q151 . # limit to i/o ppa      
 
      # get stuff about ?s 
      ?s ?ps ?ppa_value.

  SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en,en-gb". } 
}
order by ?personLabel ?ppaLabel'



bn_ppa_buckets_fetched <-
  bn_std_query(bn_ppa_buckets_sparql)


# process the data a bit
# use buckets csv rather than query.
bn_ppa_buckets_main <-
  bn_ppa_buckets_fetched |>
  make_bn_item_id(person) |>
  make_bn_ids(c(s, ppa, ppa_value, ppaLabel)) |>
  inner_join(bn_ppa_buckets |> select(ppa=ppa_id, bucket=label), by=c("ppa")) |>
  relocate(person, .after = last_col()) |>
  mutate(bucket = case_when(
    bucket=="event participation" ~ "events",
    bucket=="charitable/organisational" ~ "charitable",
    bucket=="no buckets" ~ NA,
    .default = bucket
  )) |>
  filter(!is.na(bucket))

```







```{r}
## function for colours in grouped bar chart things
 # df needs cols: group, colour_category
 # get rows in required order *before* using this (this sorts by frequency; could make another version for random/uncounted etc) and then add rowid
 # grpname is the name of the group or bucket in the group col
 # **grpcols has to be a vector of colour codes** - sthg like viridis_pal()(16)  will work, just have to have enough colours. may need to reverse direction to stop the first one being white grr.
# choice of palette and calculate number dynamically
 
make_named_colours2 <- function(df, grpname, pal){
  # pal needs to be one of the colorbrewer palette names
  
  # make the count, add at least 1.
  num <-
    df |>
    filter(group==grpname) |>
    tally() |>
    mutate(n=n+2) |>
    pull()
  
  df |>
    filter(group==grpname) |>
    count(colour_category, sort = TRUE) |>
    rowid_to_column() |>
    # direction -1 makes it dark to light... i think. then with the extra in num it cuts off the very light values.
    # feels like there should be a better way to do that, but i can't see anything in brewer_pal
    left_join( brewer_pal(palette=pal, direction=-1)(num) |> enframe(), by=c("rowid"="name")) |>
    fill(value) |>
    select(colour_category, value) |>
    # turn the df into a named vector with deframe and this can be used in scale_color_manual
    # probably a more sensible way to do this than enframe-deframe too....
    deframe()
}

```

```{r}
# example use
#make_named_colours2(for_colours, "positions", "BuGn")

# if you had a set number you could do something like
# brewer_pal_num <- function(p, num){
#   brewer_pal(palette=p, direction=-1)(num)
# }
# for_colours |> make_named_colours("events", brewer_pal_num("BuGn", 9))
```




```{r}
# NB using ppa IDs *not* labels.

for_colours <-
  bn_ppa_buckets_main |>
  count(bucket, ppaLabel, ppa) |>
  rename(group=bucket) |>
  mutate(colour_category=ppa)
```


```{r}
charitable_colours <-
  for_colours |>
  make_named_colours2("charitable", "BuGn")

collections_colours <-
  for_colours |>
  make_named_colours2("collections", "BuPu")

education_colours <-
  for_colours |>
  make_named_colours2("education", "GnBu")

elections_colours <-
  for_colours |>
  make_named_colours2("elections", "OrRd")

events_colours <-
  for_colours |>
  make_named_colours2("events", "PuBu")

fieldwork_colours <-
  for_colours |>
  make_named_colours2("fieldwork",  "RdPu")

positions_colours <-
  for_colours |>
  make_named_colours2("positions", "PuRd")

publishing_colours <-
  for_colours |>
  make_named_colours2("publishing", "YlOrRd")

societies_colours <-
  for_colours |>
  make_named_colours2("societies",  "YlGn")

all_the_colours <-
  c(events_colours, societies_colours, education_colours, positions_colours, elections_colours, collections_colours, publishing_colours, fieldwork_colours, charitable_colours, societies_colours)
```



## Notes

The purpose of the buckets is to group PPAs together in reasonably coherent (and not too unbalanced) categories to facilitate various kinds of analysis from comparative overviews to digging into the detail of specific categories.


```{r}
bn_ppa_buckets_main |>
  mutate(ppa = paste0(ppaLabel, " (", ppa, ")")) |>
  select(bucket, ppa=ppaLabel) |>
  count(bucket, ppa) |>
  kable() |>
  kable_styling()
```


Not all PPAs are in buckets! Some are more useful for network-y analysis.

- publishing could need reviewing once we have more bibliographical data 
- `corresponded with` should only be included in buckets if it's to an institution rather than an individual, but I haven't yet amended queries to handle that. (Correspondence with individuals is a small minority of results at present.)
- charitable/organisational is a very small bucket that will probably be mostly ignored for big picture stuff
- collections and fieldwork are buckets i haven't looked at at all yet 



## Overview

Labels for activities within buckets have been omitted as a) there isn't space for them and b) this just gives an overview of distributions.

```{r}
bn_ppa_buckets_main |>
  add_count(bucket, name="n_grp") |>
  count(bucket, ppaLabel, ppa, n_grp) |>
  mutate(bucket = fct_reorder(bucket, n_grp)) |>
  ggplot(aes(bucket, n, fill=ppa)) +
  geom_col(show.legend = F) +
  coord_flip() +
  # it doesn't matter if you don't actually have all the categories...
  scale_fill_manual(values = all_the_colours) +
  labs(x=NULL, y="count", title = "PPA Buckets")


```

## By bucket

```{r}
bn_ppa_bucket_bar <- function(df, f){
  
  # filter df by bucket
  filtered_data <-
    df |>
    filter(bucket==f) 
  
  # use bucket name to make a title
  title <-
    filtered_data |>
    distinct(bucket) |>
    pull(bucket)
  
  filtered_data  |>
    count(ppa, ppaLabel) |>
    mutate(ppaLabel=fct_reorder(ppaLabel, n)) |>
    ggplot(aes(ppaLabel, n)) +
    geom_col(show.legend = F) +
    coord_flip() +
    labs(x=NULL, y="count", title=title)
  
}
```


```{r}
bn_ppa_bucket_bar(bn_ppa_buckets_main, "societies") 
```



```{r}
bn_ppa_bucket_bar(bn_ppa_buckets_main, "events") 
```


```{r}
bn_ppa_bucket_bar(bn_ppa_buckets_main, "positions") 
```


```{r}
bn_ppa_bucket_bar(bn_ppa_buckets_main, "elections") 
```


```{r}
bn_ppa_bucket_bar(bn_ppa_buckets_main, "education") 
```


```{r}
bn_ppa_bucket_bar(bn_ppa_buckets_main, "collections") 
```


```{r}
bn_ppa_bucket_bar(bn_ppa_buckets_main, "publishing") 
```


```{r}
bn_ppa_bucket_bar(bn_ppa_buckets_main, "fieldwork") 
```

```{r}
bn_ppa_bucket_bar(bn_ppa_buckets_main, "charitable") 
```



